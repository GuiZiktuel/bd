---criando usuario SQL

-- Role: guilherme
-- DROP ROLE IF EXISTS guilherme;

CREATE ROLE guilherme WITH
  LOGIN
  NOSUPERUSER
  INHERIT
  CREATEDB
  NOCREATEROLE
  NOREPLICATION;

ALTER ROLE guilherme SET search_path TO elmasri, "\$user", public;

COMMENT ON ROLE guilherme IS 'Usuário do banco de dados';

---criando database

CREATE DATABASE uvv
    WITH 
    OWNER = guilherme
    ENCODING = 'UTF8'
    LC_COLLATE = 'pt_BR.UTF-8'
    LC_CTYPE = 'pt_BR.UTF-8'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1;

COMMENT ON DATABASE uvv
    IS 'Banco de Dados UVV';

---criando schema 

CREATE SCHEMA IF NOT EXISTS elmasri
    AUTHORIZATION guilherme;

COMMENT ON SCHEMA elmasri
    IS 'Esquema Elmasri';

GRANT ALL ON SCHEMA elmasri TO guilherme;

ALTER USER guilherme
SET SEARCH_PATH TO elmasri, "$user", public;

---criando tabelas 

CREATE TABLE IF NOT EXISTS elmasri.funcionario
(
    cpf character(11) COLLATE pg_catalog."default" NOT NULL,
    primeiro_nome character varying(15) COLLATE pg_catalog."default" NOT NULL,
    nome_meio character(1) COLLATE pg_catalog."default",
    ultimo_nome character varying(15) COLLATE pg_catalog."default" NOT NULL,
    data_nascimento date,
    endereco character varying(50) COLLATE pg_catalog."default",
    sexo character(1) COLLATE pg_catalog."default",
    salario numeric(10,2),
    cpf_supervisor character(11) COLLATE pg_catalog."default",
    numero_departamento integer NOT NULL,
    CONSTRAINT funcionario_pkey PRIMARY KEY (cpf),
    CONSTRAINT m_ou_f CHECK (sexo = ANY (ARRAY['m'::bpchar, 'f'::bpchar])),
    CONSTRAINT salario_positivo CHECK (salario >= 0::numeric),
    CONSTRAINT numero_departamento_positivo CHECK (numero_departamento > 0)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS elmasri.funcionario
    OWNER to guilherme;

COMMENT ON TABLE elmasri.funcionario
    IS 'Tabela funcionário';

COMMENT ON COLUMN elmasri.funcionario.cpf
    IS 'CPF do funcionário';

COMMENT ON COLUMN elmasri.funcionario.primeiro_nome
    IS 'Primeiro nome do funcionário';

COMMENT ON COLUMN elmasri.funcionario.nome_meio
    IS 'Nome do meio do funcionário';

COMMENT ON COLUMN elmasri.funcionario.ultimo_nome
    IS 'Último nome do funcionário';

COMMENT ON COLUMN elmasri.funcionario.data_nascimento
    IS 'Data de nascimento do Funcionário';

COMMENT ON COLUMN elmasri.funcionario.endereco
    IS 'Endereço do funcionário';

COMMENT ON COLUMN elmasri.funcionario.sexo
    IS 'Sexo do funcionário';

COMMENT ON COLUMN elmasri.funcionario.salario
    IS 'Salário do funcionário';

COMMENT ON COLUMN elmasri.funcionario.cpf_supervisor
    IS 'CPF do supervisor do funcionário';

COMMENT ON COLUMN elmasri.funcionario.numero_departamento
    IS 'Numero do departamento do funcionário';
    
COMMENT ON CONSTRAINT funcionario_pkey ON elmasri.funcionario
    IS 'Chave Primária';

COMMENT ON CONSTRAINT m_ou_f ON elmasri.funcionario
    IS 'Regra para ter apenas os dois caracteres';
    
COMMENT ON CONSTRAINT salario_positivo ON elmasri.funcionario
    IS 'Número do salário positivo';
    
COMMENT ON CONSTRAINT numero_departamento_positivo ON elmasri.funcionario
    IS 'Número do departamento positivo';

---tabela departamento

CREATE TABLE IF NOT EXISTS elmasri.departamento
(
    numero_departamento integer NOT NULL,
    nome_departamento character varying(15) COLLATE pg_catalog."default" NOT NULL,
    cpf_gerente character(11) COLLATE pg_catalog."default" NOT NULL,
    data_inicio_gerente date,
    CONSTRAINT departamento_pkey PRIMARY KEY (numero_departamento),
    CONSTRAINT departamento_nome_departamento_key UNIQUE (nome_departamento),
    CONSTRAINT fk_cpf_gerente FOREIGN KEY (cpf_gerente)
        REFERENCES elmasri.funcionario (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT numero_departamento_positivo CHECK (numero_departamento > 0)
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS elmasri.departamento
    OWNER to guilherme;
COMMENT ON TABLE elmasri.departamento
    IS 'Tabela departamento';

COMMENT ON COLUMN elmasri.departamento.numero_departamento
    IS 'Número do departamento';

COMMENT ON COLUMN elmasri.departamento.nome_departamento
    IS 'Nome do departamento';

COMMENT ON COLUMN elmasri.departamento.cpf_gerente
    IS 'CPF do gerente';

COMMENT ON COLUMN elmasri.departamento.data_inicio_gerente
    IS 'Data do início do gerente';
    
COMMENT ON CONSTRAINT departamento_pkey ON elmasri.departamento
    IS 'Chave primária departamento';

COMMENT ON CONSTRAINT departamento_nome_departamento_key ON elmasri.departamento
    IS 'Chave única do nome do departamento';
    
COMMENT ON CONSTRAINT numero_departamento_positivo ON elmasri.departamento
    IS 'Número do departamento positivo';

---localizacoes departamento

CREATE TABLE IF NOT EXISTS elmasri.localizacoes_departamento
(
    local character varying(15) COLLATE pg_catalog."default" NOT NULL,
    numero_departamento integer NOT NULL,
    CONSTRAINT localizacoes_departamento_pkey PRIMARY KEY (local),
    CONSTRAINT fk_numero_departamento FOREIGN KEY (numero_departamento)
        REFERENCES elmasri.departamento (numero_departamento) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT numero_departamento_positivo CHECK (numero_departamento > 0)
)

TABLESPACE pg_default;


ALTER TABLE IF EXISTS elmasri.localizacoes_departamento
    OWNER to guilherme
COMMENT ON TABLE elmasri.localizacoes_departamento
    IS 'Tabela localizações do departamento';

COMMENT ON COLUMN elmasri.localizacoes_departamento.local
    IS 'Local do departamento';

COMMENT ON COLUMN elmasri.localizacoes_departamento.numero_departamento
    IS 'Número do departamento';
    
COMMENT ON CONSTRAINT localizacoes_departamento_pkey ON elmasri.localizacoes_departamento
    IS 'Chave primária localização do departamento';

COMMENT ON CONSTRAINT fk_numero_departamento ON elmasri.localizacoes_departamento
    IS 'Chave estrangeira número do departamento';
    
COMMENT ON CONSTRAINT numero_departamento_positivo ON elmasri.localizacoes_departamento
    IS 'Número do departamento positivo';

---projeto

CREATE TABLE IF NOT EXISTS elmasri.projeto
(
    numero_projeto integer NOT NULL,
    nome_projeto character varying(20) COLLATE pg_catalog."default" NOT NULL,
    local_projeto character varying(15) COLLATE pg_catalog."default",
    numero_departamento integer NOT NULL,
    CONSTRAINT projeto_pkey PRIMARY KEY (numero_projeto),
    CONSTRAINT projeto_nome_projeto_key UNIQUE (nome_projeto),
    CONSTRAINT fk_numero_departamento FOREIGN KEY (numero_departamento)
        REFERENCES elmasri.departamento (numero_departamento) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT numero_projeto_positivo CHECK (numero_projeto > 0),
    CONSTRAINT numero_departamento_positivo CHECK (numero_departamento > 0)
)
TABLESPACE pg_default;

ALTER TABLE IF EXISTS elmasri.projeto
    OWNER to guilherme;

COMMENT ON TABLE elmasri.projeto
    IS 'Tabela projeto';

COMMENT ON COLUMN elmasri.projeto.numero_projeto
    IS 'Número do projeto';

COMMENT ON COLUMN elmasri.projeto.nome_projeto
    IS 'Nome do projeto';

COMMENT ON COLUMN elmasri.projeto.local_projeto
    IS 'Local do projeto';

COMMENT ON COLUMN elmasri.projeto.numero_departamento
    IS 'Número do departamento';
    
COMMENT ON CONSTRAINT projeto_pkey ON elmasri.projeto
    IS 'Chave primária projeto';

COMMENT ON CONSTRAINT projeto_nome_projeto_key ON elmasri.projeto
    IS 'Chave única nome do projeto';

COMMENT ON CONSTRAINT fk_numero_departamento ON elmasri.projeto
    IS 'Chave estrangeira  número do departamento';
    
COMMENT ON CONSTRAINT numero_projeto_positivo ON elmasri.projeto
    IS 'Número do projeto positivo';
    
COMMENT ON CONSTRAINT numero_departamento_positivo ON elmasri.projeto
    IS 'Número do departamento positivo';

---dependente

CREATE TABLE IF NOT EXISTS elmasri.dependente
(
    cpf_funcionario character(11) COLLATE pg_catalog."default" NOT NULL,
    nome_dependente character varying(15) COLLATE pg_catalog."default" NOT NULL,
    sexo character(1) COLLATE pg_catalog."default",
    data_nascimento date,
    parentesco character varying(15) COLLATE pg_catalog."default",
    CONSTRAINT dependente_pkey PRIMARY KEY (nome_dependente),
    CONSTRAINT fk_cpf_funcionario FOREIGN KEY (cpf_funcionario)
        REFERENCES elmasri.funcionario (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT m_ou_f CHECK (sexo = ANY (ARRAY['m'::bpchar, 'f'::bpchar]))
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS elmasri.dependente
    OWNER to guilherme;
COMMENT ON TABLE elmasri.dependente
    IS 'Tabela dependente';

COMMENT ON COLUMN elmasri.dependente.cpf_funcionario
    IS 'CPF do funcionário';

COMMENT ON COLUMN elmasri.dependente.nome_dependente
    IS 'Nome do dependente';

COMMENT ON COLUMN elmasri.dependente.sexo
    IS 'Sexo do dependente';

COMMENT ON COLUMN elmasri.dependente.data_nascimento
    IS 'Data de nascimento do dependente';

COMMENT ON COLUMN elmasri.dependente.parentesco
    IS 'Parentesco do dependente com o funcionário';
    
COMMENT ON CONSTRAINT dependente_pkey ON elmasri.dependente
    IS 'Chave primária dependente';

COMMENT ON CONSTRAINT fk_cpf_funcionario ON elmasri.dependente
    IS 'Chave estrangeira CPF do funcionário';

COMMENT ON CONSTRAINT m_ou_f ON elmasri.dependente
    IS 'Regra de caractere';

---trabalha_em

CREATE TABLE IF NOT EXISTS elmasri.trabalha_em
(
    cpf_funcionario character(11) COLLATE pg_catalog."default" NOT NULL,
    numero_projeto integer NOT NULL,
    horas numeric(3,1),
    CONSTRAINT trabalha_em_cpf_funcionario_fkey FOREIGN KEY (cpf_funcionario)
        REFERENCES elmasri.funcionario (cpf) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT trabalha_em_numero_projeto_fkey FOREIGN KEY (numero_projeto)
        REFERENCES elmasri.projeto (numero_projeto) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT numero_projeto_positivo CHECK (numero_projeto > 0),
    CONSTRAINT horas_positivo CHECK (horas >= 0::numeric)
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS elmasri.trabalha_em
    OWNER to guilherme;
COMMENT ON TABLE elmasri.trabalha_em
    IS 'Tabela trabalha em';

COMMENT ON COLUMN elmasri.trabalha_em.cpf_funcionario
    IS 'CPF do funcionário';

COMMENT ON COLUMN elmasri.trabalha_em.numero_projeto
    IS 'Número do projeto';

COMMENT ON COLUMN elmasri.trabalha_em.horas
    IS 'Horas';

COMMENT ON CONSTRAINT trabalha_em_cpf_funcionario_fkey ON elmasri.trabalha_em
    IS 'Chave estrangeira CPF do funcionário';
    
COMMENT ON CONSTRAINT trabalha_em_numero_projeto_fkey ON elmasri.trabalha_em
    IS 'Chave estrangeira número do projeto';

COMMENT ON CONSTRAINT numero_projeto_positivo ON elmasri.trabalha_em
    IS 'Número do projeto positivo';
    
COMMENT ON CONSTRAINT horas_positivo ON elmasri.trabalha_em
    IS 'Número de horas positivo';

--- inserindo dados na tabela

INSERT INTO elmasri.funcionario (cpf,primeiro_nome,nome_meio,ultimo_nome,data_nascimento,endereco,sexo,salario,cpf_supervisor,numero_departamento) VALUES
	 ('98765432168','Jennifer','D','Souza','1946-06-20','Av.Arthur de Lima, 54 , Santo André , SP','f',43000.00,'88866555576',4),
	 ('66688444476','Ronaldo','K','Lima','1962-09-15','Rua Rebouças, 65, Piracicaba, SP','m',38000.00,'33344555587',5),
	 ('45345345376','Joice','A','Leite','1972-07-31','Av.Lucas Obes, 74 , São Paulo, SP','f',25000.00,'33344555587',5),
	 ('98798798733','André','V','Pereira','1969-03-29','Rua Timbira, 35, São Paulo, SP','m',25000.00,'98765432168',4),
	 ('12345678966','João','B','Silva','1965-01-09','Rua das Flores, 751, São Paulo, SP','m',30000.00,'33344555587',5),
	 ('33344555587','Fernando','T','Wong','1955-12-08','Rua da Lapa, 34, São Paulo, SP','m',40000.00,'88866555576',5),
	 ('88866555576','Jorge','E','Brito','1937-11-10','Rua do Horto, 35, São Paulo','m',55000.00,NULL,1),
	 ('99988777767','Alice','J','Zelaya','1968-01-19','Rua Souza Lima, 35, Curitiba, PR','f',25000.00,'98765432168',4);
	 
ALTER TABLE elmasri.funcionario ADD CONSTRAINT fk_cpf_supervisor FOREIGN KEY (cpf_supervisor) REFERENCES elmasri.funcionario(cpf);

INSERT INTO elmasri.departamento (numero_departamento,nome_departamento,cpf_gerente,data_inicio_gerente) VALUES
	 (4,'Admininstração','98765432168','1995-01-01'),
	 (1,'Matriz','88866555576','1981-06-19'),
	 (5,'Pesquisa','33344555587','1988-05-22');
	 
INSERT INTO elmasri.localizacoes_departamento (local,numero_departamento) VALUES
	 ('São Paulo',1),
	 ('Mauá',4),
	 ('Santo André',5),
	 ('Itu',5),
	 ('Sao Paulo',5);
	 
INSERT INTO elmasri.projeto (numero_projeto,nome_projeto,local_projeto,numero_departamento) VALUES
	 (1,'ProdutoX','Santo André',5),
	 (2,'ProdutoY','Itu',5),
	 (3,'ProdutoZ','São Paulo',5),
	 (10,'Informatização','Mauá',4),
	 (20,'Reorganização','Sao Paulo',1),
	 (30,'Novos Benefícios','Mauá',4);

INSERT INTO elmasri.dependente (cpf_funcionario,nome_dependente,sexo,data_nascimento,parentesco) VALUES
	 ('33344555587','Alicia','f','1986-04-05','Filha'),
	 ('33344555587','Tiago','m','1983-10-25','Filho'),
	 ('33344555587','Janaína','f','1958-05-03','Esposa'),
	 ('98765432168','Antonio','m','1942-02-28','Marido'),
	 ('12345678966','Michael','m','1988-01-04','Filho'),
	 ('12345678966','Alícia','f','1988-12-30','Filha'),
	 ('12345678966','Elizabeth','f','1967-05-05','Esposa');

INSERT INTO elmasri.trabalha_em (cpf_funcionario,numero_projeto,horas) VALUES
	 ('12345678966',1,32.5),
	 ('12345678966',2,7.5),
	 ('66688444476',3,40.0),
	 ('45345345376',1,20.0),
	 ('45345345376',2,20.0),
	 ('33344555587',2,10.0),
	 ('33344555587',3,10.0),
	 ('33344555587',10,10.0),
	 ('33344555587',20,10.0),
	 ('99988777767',30,30.0),
	 ('99988777767',10,10.0),
	 ('98798798733',10,35.0),
	 ('98798798733',30,5.0),
	 ('98765432168',30,20.0),
	 ('98765432168',20,15.0),
	 ('88866555576',20,NULL);
